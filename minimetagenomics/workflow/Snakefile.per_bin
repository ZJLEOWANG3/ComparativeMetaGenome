################################################################################
# GLOBAL CONFIGS
################################################################################

#shell.prefix("source ~/.bashrc")
spades_assembly	= "spades"
spades_contig	= spades_assembly + "/contigs.fasta"
spades_scaffold	= spades_assembly + "/scaffolds.fasta"
samtools		= "/home/li.gua/opt/htslib/1.12-2021-03-17/bin/samtools"
bowtie2_prefix	= "/home/li.gua/opt/bowtie/2-2.4.2-2020-10-05"
bowtie2_build	= bowtie2_prefix + "/bowtie2-build"
bowtie2			= bowtie2_prefix + "/bowtie2"

################################################################################
# RULES
################################################################################

################################################################################
# acquired reads mapped to bin
################################################################################
# trimmomatic parameters are consistent with original pipeline by Yu et al. 2017
rule bowtie2_build:
	input:
		"bin.fasta",
	output:
		"bt2_idx/end",
	params:
		bt2_build=bowtie2_build,
	shell:
		"""
		mkdir -p $(dirname {output})
		{params.bt2_build} -f --threads $SLURM_CPUS_PER_TASK \\
			{input} $(dirname {output})/ref
		touch {output}
		"""

rule bowtie2:
	input:
		idx="bt2_idx/end",
		r1="trimmomatic/R1.fastq",
		r2="trimmomatic/R2.fastq",
	output:
		r1="bin_reads/R1.fastq",
		r2="bin_reads/R2.fastq",
	params:
		sam="bin_reads/mapping.sam",
		bowtie2=bowtie2,
	shell:
		"""
		mkdir -p $(dirname {output.r1})
		{params.bowtie2} -q -p $SLURM_CPUS_PER_TASK \\
			-x $(dirname {input.idx})/ref --very-sensitive -I 0 -X 1000 \\
			-1 {input.r1} -2 {input.r2} -S {params.sam} \\
			--al-conc $(dirname {output.r1})/mapped
		mv $(dirname {output.r1})/mapped.1 {output.r1}
		mv $(dirname {output.r1})/mapped.2 {output.r2}
		"""

rule spades:
	input:
		r1="bin_reads/R1.fastq",
		r2="bin_reads/R2.fastq",
	output:
		contig=spades_contig,
		scaffold=spades_scaffold,
	shell:
		"""
		bash -c "
			. /home/li.gua/.bashrc
			conda activate metagenomics
			spades.py --sc --careful -t $SLURM_CPUS_PER_TASK \\
				-m 256 -k 33,55,77,99 \\
				-o $(dirname {output.contig}) -1 {input.r1} -2 {input.r2}
		"
		"""
